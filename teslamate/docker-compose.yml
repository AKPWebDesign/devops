version: "3"

services:
  teslamate:
    image: teslamate/teslamate:latest
    restart: unless-stopped
    hostname: ${HOST}
    depends_on:
      - database
      - mosquitto
    environment:
      - DATABASE_USER=${TM_DB_USER}
      - DATABASE_PASS=${TM_DB_PASS}
      - DATABASE_NAME=${TM_DB_NAME}
      - DATABASE_HOST=database
      - MQTT_HOST=mosquitto
      - ENCRYPTION_KEY=${TM_ENCRYPTION_KEY}
      - VIRTUAL_HOST=${HOST}
      - CHECK_ORIGIN=true
      - TZ=America/New_York
    # uncomment if importing data
    # volumes:
    # - ./import/:/opt/app/import
    labels:
      - traefik.enable=true
      # SSL router setup
      - traefik.http.routers.teslamate.rule=Host(`${HOST}`)
      - traefik.http.routers.teslamate.service=teslamate
      - traefik.http.services.teslamate.loadbalancer.server.port=4000

      # websocket router setup
      - traefik.http.routers.teslamate-ws.rule=Host(`${HOST}`) && Path(`/live/websocket`)
      - traefik.http.routers.teslamate-ws.service=teslamate
    cap_drop:
      - all
    networks:
      default:

  database:
    image: postgres:13
    restart: unless-stopped
    hostname: teslamate-database
    environment:
      - POSTGRES_USER=${TM_DB_USER}
      - POSTGRES_PASSWORD=${TM_DB_PASS}
      - POSTGRES_DB=${TM_DB_NAME}
    volumes:
      - ${CONFIG_DIR}/teslamate/database:/var/lib/postgresql/data
    networks:
      default:

  mosquitto:
    image: eclipse-mosquitto:1.6
    restart: unless-stopped
    hostname: teslamate-mosquitto
    volumes:
      - teslamate-mosquitto-conf:/mosquitto/config
      - teslamate-mosquitto-data:/mosquitto/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.tm-mosquitto.rule=Host(`${HOST}`) && (Path(`/mosquitto`) || PathPrefix(`/mosquitto/`))
      - traefik.http.routers.tm-mosquitto.service=tm-mosquitto
      - traefik.http.services.tm-mosquitto.loadbalancer.server.port=1883
    networks:
      default:

volumes:
  teslamate-mosquitto-conf:
  teslamate-mosquitto-data:

networks:
  default:
    name: ${TRAEFIK_NETWORK}
